import random

from django.core.management.base import BaseCommand
from FFS.models import *
from .utils import random_date, random_timedelta


def add_cities():
    Fines(
        title="Штраф ГИБДД за нарушение ПДД водителем СИМ",
        text="Обратимся к части 2 статьи 12.29 КоАП: Нарушение Правил дорожного движения лицом, управляющим велосипедом, либо возчиком или другим лицом, непосредственно участвующим в процессе дорожного движения (за исключением лиц, указанных в части 1 настоящей статьи, а также водителя транспортного средства), -влечет наложение административного штрафа в размере восьмисот рублей. Итак, штраф для водителя СИМ за нарушение любого пункта правил дорожного движения составляет 800 рублей. Такой штраф накладывается за любые нарушения, кроме нарушений: в состоянии опьянения; создающих помехи в движении транспортных средств; повлекших причинение вреда здоровью потерпевшего",
        status=1,
        price=800,
    ).save()

    Fines(
        title="Штраф для водителя СИМ в состоянии опьянения",
        text="Обратимся к части 1 статьи 12.30 КоАП: Нарушение Правил дорожного движения пешеходом, пассажиром транспортного средства или иным участником дорожного движения (за исключением водителя транспортного средства), повлекшее создание помех в движении транспортных средств, - влечет наложение административного штрафа в размере одной тысячи рублей. Если владелец СИМ нарушил требования правил и создал помехи для движения транспортного средства, то его ожидает штраф а размере 1 000 рублей. За создание помех велосипедисту или другому водителю СИМ штраф по части 1 статьи 12.30 не накладывается.",
        status=1,
        price=1500,
    ).save()

    Fines(
        title="Штраф для СИМ за создание помех",
        text="Обратимся к части 1 статьи 12.30 КоАП: Нарушение Правил дорожного движения пешеходом, пассажиром транспортного средства или иным участником дорожного движения (за исключением водителя транспортного средства), повлекшее создание помех в движении транспортных средств, - влечет наложение административного штрафа в размере одной тысячи рублей. Если владелец СИМ нарушил требования правил и создал помехи для движения транспортного средства, то его ожидает штраф а размере 1 000 рублей. За создание помех велосипедисту или другому водителю СИМ штраф по части 1 статьи 12.30 не накладывается.",
        status=1,
        price=1000,
    ).save()

    Fines(
        title="Штраф для СИМ за причинение вреда здоровью",
        text="Обратимся к части 2 статьи 12.30 КоАП: Нарушение Правил дорожного движения пешеходом, пассажиром транспортного средства или иным участником дорожного движения (за исключением водителя транспортного средства), повлекшее по неосторожности причинение легкого или средней тяжести вреда здоровью потерпевшего, - влечет наложение административного штрафа в размере от одной тысячи до одной тысячи пятисот рублей. Если нарушение водителем СИМ требований ПДД привело к возникновению дорожно-транспортного происшествия, в котором причинен вред здоровью людей, то водителя ожидает штраф 1 000 - 1 500 рублей.",
        status=1,
        price=1500,
    ).save()

    print("Услуги добавлены")


def add_vacancies():
    users = CustomUser.objects.filter(is_moderator=False)
    if len(users) == 0:
        print("Заявки не могут быть добавлены. Сначала добавьте пользователей с помощью команды add_users")
        return

    fines = Fines.objects.all()

    for _ in range(30):
        breach = Breaches.objects.create()
        breach.name = "Breach №" + str(breach.pk)
        breach.status = random.randint(2, 5)

        if breach.status in [3, 4]:
            breach.closed_date = random_date()
            breach.formated_date = breach.closed_date - random_timedelta()
            breach.created_date = breach.formated_date - random_timedelta()
        else:
            breach.formated_date = random_date()
            breach.created_date = breach.formated_date - random_timedelta()

        breach.user = random.choice(users)

        for i in range(random.randint(1, 3)):
            try:
                conf = ConfOfFines.objects.create()
                conf.breach = breach
                conf.fine = random.choice(fines)
                conf.save()
            except:
                print("e")

        breach.save()

    print("Заявки добавлены")


class Command(BaseCommand):
    def handle(self, *args, **kwargs):
        # management.call_command("clean_db")

        add_cities()
        add_vacancies()










